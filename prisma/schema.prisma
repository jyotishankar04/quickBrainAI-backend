generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String  @id @default(uuid())
  name         String
  username     String  @unique
  email        String  @unique
  isVerified   Boolean @default(false)
  bio          String  @default("Hey there! I'm using QuickBrainAI")
  avatarId     String?
  avatarUrl    String?
  bannerId     String?
  bannerUrl    String?
  location     String?
  instagramUrl String?
  twitterUrl   String?
  githubUrl    String?
  customUrl    String?

  password     String
  refreshToken String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  role             Role             @default(USER)
  subscriptionPlan SubscriptionPlan @default(FREE)
  Notes            Notes[]

  @@index([email])
  @@index([username])
  @@map("users")
}

model Category {
  id        String   @id @default(uuid())
  name      String
  Notes     Notes[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("categories")
}

model Notes {
  id              String   @id @default(uuid())
  noteTitle       String
  noteDescription String
  noteContent     String
  isStared        Boolean  @default(false)
  isPrivate       Boolean  @default(false)
  files           String[]

  tags   NoteTags[]
  user   User?      @relation(fields: [userId], references: [id])
  userId String

  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  Category   Category? @relation(fields: [categoryId], references: [id])
  categoryId String?

  @@index([userId])
  @@map("notes")
}

model NoteTags {
  id        String   @id @default(uuid())
  tagName   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Notes     Notes?   @relation(fields: [notesId], references: [id])
  notesId   String?

  @@index([notesId])
  @@map("noteTags")
}

model Otp {
  id        String   @id @default(cuid())
  otp       String
  email     String   @unique
  expiresAt DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("otp")
}

// ENUMS 

enum Role {
  USER
  ADMIN
}

enum SubscriptionPlan {
  FREE
  PREMIUM
  PRO
}
